使用说明:
1. 脚本主要用于通过ssh进行fio测试作业分发,文件分发,命令批量执行.
   文件分发,命令执行与fio作业可以同时发起,使用'--fio'选项时三者都会被主机执行,默认顺序为:
   1).拷贝文件到主机,
   2).运行fio作业,
   3).执行给定的命令,
   使用'-A'选项时,可调转2和3的顺序,即先执行给定的命令后运行测试.
   默认当命令与fio测试一起执行时,命令仅执行一次,使用'-E'选项可以使命令在每一轮测试都执行

2. 脚本的环境需求:
   脚本运行需要发起测试的主机拥有被测试机器的免密登录权限.
   被测主机最好具有相同或相似规格的磁盘设备,
   被批量测试的主机通用配置,如,内存,CPU,网络设备等,尽量不要有太大幅度差异,
   尽量保证所有主机的连接不会受网络影响产生连接中断,默认情况下脚本的预检测和fio测试途中都会对网络进行测试,若主机连接因网络中断则脚本终止并报错,
   如果对于网络质量不能保证请使用'-f'选项保证测试跳过中间错误的部分和忽略失联的主机继续进行.


3. 运行测试的多个主机为一组,配置文件:*.grp
   主机组的使用方式与clustershell保持相同
   配置文件格式:
     第一列,主机组的名称,名称需要唯一不重复,
     第二列,主机组内主机的ssh登录用户,在多个可登陆用户中指定其一
     第三列,主机组内主机的ssh登录端口
     第四列,该主机组对应的后端服务器,使用逗号分隔后端服务器的登录信息,即:"用户,端口,ip",若无,填写'none'
     第五列,该主机对应的后端服务器2,格式同第四列
     第六列,主机组内的主机IP地址列表,多个ip使用逗号分隔,中间可以换行,每一行的逗号后可以包含以'#'开头的注释,以便标注不同的主机信息
            可以在结尾使用'--'表示使用单独的文件存储ip列表,
            将跟组名相同的以'.grp'结尾的配置文件存放到'conf/'目录即可,
            额外的ip列表文件每行一个ip地址,可以使用'#'开头作为注释,不需要使用逗号分隔.
     其中,字段之间可以使用空格或者tab制表符作为间隔和缩进,字段信息不使用引号
   使用方式: 
     使用'-g <组名>'   调用文件中指定的组执行任务,
     使用'-x <ip地址>' 剔除特定的主机,
     使用'-a'          在所有组运行任务,
     使用'-X <组名>'   剔除指定的组.


4. 测试的包含一定参数范围(如4k,256k,4m多个块大小)的作业为一个作业组,配置文件:*.job
   其中,名为'DEFAULT'的组其作业的fio选项及参数可以被其他组继承
   配置文件格式:
     第一列,作业组的名称,名称唯一.
     第二列,该组作业运行时长,runtime, 
            该列必须为数字,
            或者'none'表示不指定
     第三列,该组作业测试数据量大小,size, 
            该列必须为指定的容量信息,可以是指定的大小值,如'100G',或者百分比值,如'100%',
            或者'random'表示使用1%-100%的随机值.
            该列不能留空,否则fio不能正常测试
     第四列,该组作业的块大小列表,bs,多个块值使用逗号分隔,
            该列必须为块大小字符串.如'4k,256k',
            或者"none",表示不指定,
            如果,使用混合读写模式特定比例的块大小测试,
                bs设置为'none',然后将'bssplit'参数写在自定义选项参数中即可.
     第五列,是否将缺省选项和参数从DEFAULT组中继承,
            若DEFAULT组包含10个选项及相关参数,当前组只需要调整其中一个选项来作为新的一组,
            则此处填写'True',再在下一个fio的选项和参数字段部分,仅填写需要调整的那一个和'DEFAULT'不同的选项和对应参数即可.
     第六列,fio作业的所有其他测试选项和参数,因为参数通常会很多,这里有两种选项分隔方式:
            -1.使用逗号分隔多个选项,选项和参数之间不使用空格
            -2.使用双引号,并在内部使用空格分隔,选项和参数之间不使用空格
     注意,使用模板示例的选项将自动生成对应的测试报告,
            增加fio的作业选项自动生成的报告将不会进行统计,
            如果减少作业的选项将可能影响自动生成报告的结果.
   使用方式:
     使用'-j  <作业组名>' 即可调用该组参数执行任务,多个作业组名使用逗号分隔


5. 测试的多个磁盘或者文件为一个磁盘组,配置文件:*.blk
   其中,指定名称的磁盘必须在测试主机上统一存在,如果指定的是文件,当其不存在时fio会自动创建该文件.
   配置文件格式一:
     第一列,磁盘组名称,名称唯一 
     第二列,磁盘/文件列表的绝对路径列表,多个磁盘或者文件之间使用逗号分隔,中间可以换行,每一行后可以使用'#'开头的注释以便标注信息.
   配置文件格式二:
       如果需要测试的对象较多,如进行数百个rbd的测试,可以使用单独的配置文件,将其存放在'conf/'目录中,文件名以'.blk'结尾即可
       每行填写一个测试块对象名称,请填写完整路径,如,'/dev/sdc',
       如果rbd指定'pool'选项已经指定,则可以仅填写rbd名称,如'img001'
   使用方式:
     使用'-b  <磁盘组名>'  即可调用填写好的组信息运行测试

6. 脚本的配置文件不存在时使用'-e'可以生成简单的参考样本

7. 更多fio测试选项
     --fio          发起fio测试
     --fio-list     显示fio作业在各个主机的运行状态列表
     --fio-stop     跳过某一组主机正在运行的fio作业
     --test-stop    停止某一组测试
     --round-list   给出测试将发起的每一轮测试的编号和模式信息
     --round-retest 针对指定的某一轮或某几轮测试进行重测.
     --recover      如果测试意外停止,可以使用该选项恢复中断的测试
     --recover-from 从给定的某一轮开始继续测试
     -b             指定作业的磁盘组
     -j             指定作业的作业组
     -A             运行作业时先执行给定的命令
     -o             指定输出文件夹(不指定则使用时间戳)
     -s             单盘模式,fio作业一次仅一个磁盘
     -c             对测试环境进行与检查
   示例:
         ./cfiojobs -g group1 --fio-list
         ./cfiojobs -g group1 --fio-stop
         ./cfiojobs -g group1 --fio -b blkgroup1 -j job1 -A 'dd if=/dev/zero of=/dev/sdb bs=4M count=12800' -F file1,file2,file3 -D /tmp -o test0808
   提示: 
         ./cfiojobs -g <组名> ls -pqf
         可以进行快速的网络环境检查, 这里是使用了批量执行'ls'命令并检查返回值观察结果的方式完成的,仅作为示范.
         ./cfiojobs -g <组名> -fc 
         可以进行有效的环境检查,并给出可测试的裸盘列表,请养成良好的检查习惯.

7. 脚本的其他选项
     -e            生成配置文件模板
     -t            运行之前执行检查主机组配置文件
     -q            减少运行信息输出,仅给出当前进度的标题信息和执行结果返回值
     -d            显示函数接收到的参数与运行状态,并尝试跳过失败的部分继续运行
     -f            尝试跳过失败的部分继续运行脚本
     -p            发送命令与拷贝文件的动作都会被放到后台并行执行,
                   注意,'-p' 仅在未发起fio测试作业的前提下生效,
                   fio测试时默认将以并行方式运行,该选项无意义.
                   并行模式的返回结果以各自在后台的结束时间为顺序,不会顺次返回标准输出.
     -F            指定需要分发的文件,多个文件使用逗号分隔
     -C            指定需要收集的文件,多个文件使用逗号分隔,使用该参数请指定输出文件夹.
     -D            指定分发文件到目标主机上的位置(如果未指定,默认使用用户家目录)
     --script      在主机组上批量运行指定的脚本
     --argument    为批量运行的脚本传递参数
     -h            显示帮助信息
     -v            显示版本信息

8. 其他命令示例与说明
   执行简单命令: ./cfiojobs -g group1 lsblk
   关于shell的远程命令的引号使用:
     命令包含远端主机的环境变量,需要使用单引号,从而保证命令不被转译,如
         ./cfiojobs -g group3 'ls /var/lib/ceph/mon/ceph-$HOSTNAME/'
     命令使用当前主机shell变量或者管道,如
         ./cfiojobs -g group2 "ps aux |grep mysql"
         ./cfiojobs -g group4 "yum -y install $pkg_name"
     命令使用awk等包含内部变量的程序命令,需要使用单引号加反引号,如
         ./cfiojobs -g group5 "ls -l |awk '{print\$2}'"
    如果执行的命令较为复杂建议编写单独的shell脚本,并使用'--script' 选项批量执行.

9. 1).批量测试脚本 './group.sh'
      脚本会针对'grouplist'文件中的组自动完成指定的测试,
      并在测试完成后会自动生成测试的Excel格式信息表格,
   2).日志分析脚本 './bin/cfiojobs.log2.py'
      可以自动生成一次测试或者一台主机测试的输出目录下日志的分析结果,报告使用csv格式表格.
      完整集群测试报告,
        不需要任何参数,该脚本加测试输出目录即可,结果输出到测试目录下的'_report'目录(可在Excel打开).
      仅针对测试中的某一台主机单独生成报告,请使用'nocompare'完成
        './bin/cfiojobs.log2.py  <主机日志目录>  nocompare'
        结果同样在'_report'子目录中,该报告仅为linux下快速查看某一主机测试结果,使用'utf-8'编码不能在Excel直接打开.
   3).csv查看脚本 './bin/catcsv.sh'
      使用"./catcsv.sh csv文件名" 即可再shell中获得该文件的预览结果.(仅支持utf8编码).
   4).测试中关联运行外部shell脚本.
      可以指定任意主机组在测试中一起运行指定的外部shell脚本,
      在'conf'目录下'<组名>.bsh'文件中将需要批量执行的外部脚本名称填好即可,
      如果需要测试中的信息传递给外部的脚本,可修改在脚本的'_record_backend'函数中,根据需求添加信息到'bknd_sh_pass_in'变量中即可.

10. 通用测试步骤

    1). 添加主机组
        在'cfiojobs.grp'将填写最基本组名等信息,
        将主机列表等信息填到'cfiojobs.grp'中
        或者使用独立文件'conf/<组名>.grp'.

    2). 运行检查
	单独检查:
	'./cfiojobs -g <组名> -fc' 
        完成测试环境检查,并核对'conf/<组名>.blk'文件中自动生成的测试磁盘列表是否合适.
	或者,统一检查
	'./cfiojobs -afc' 

    3). 将检查完成的组名添加到'grouplist'文件中,
        每行填写一个组名
	可使用'#'注释废弃的测试组

    4). 填写或者选取'cfiojobs.job'中的作业组,
        更改'group.sh'中的默认作业组'job_group=<需要使用的作业组>'

    5). 运行'group.sh' 并指定模式和报告的Excel名称即可开始测试.

    6). 每一个脚本均包含帮助信息,
        不加参数直接运行即可获取对应的帮助信息.

